image: node:12

pipelines:
  branches:
    master:
      - step:
          name: Install, build and tests
          services:
            - docker
          caches:
            - docker
            - node
            - npm
          script:
            - cp src/config.ts.prod src/config.ts
            - npm install -g @angular/cli
            - npm install
            - npm run build --prod
          artifacts:
            - dist/**
      - step:
          name: Deploy to S3
          services:
            - docker
          caches:
            - docker
          deployment: production
          script:
            - pipe: atlassian/aws-s3-deploy:0.2.4
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_PRODUCTION
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_PRODUCTION
                AWS_DEFAULT_REGION: $AWS_REGION_PRODUCTION
                S3_BUCKET: $BUCKET_NAME_PRODUCTION
                LOCAL_PATH: "dist/areadofornecedor-angular"
      - step:
          name: Clear Cloudfront Cache
          services:
            - docker
          caches:
            - docker
          script:
            - pipe: atlassian/aws-cloudfront-invalidate:0.1.1
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_PRODUCTION
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_PRODUCTION
                AWS_DEFAULT_REGION: $AWS_REGION_PRODUCTION
                DISTRIBUTION_ID: $DISTRIBUTION_ID_PRODUCTION
#      - step:
#          name: Clear Cloudflare Cache
#          script:
#            - >-
#              curl -X DELETE https://api.cloudflare.com/client/v4/zones/b720b670c23f5a4efed93d19641bb3c4/purge_cache
#              -H 'Content-Type: application/json'
#              -H 'X-Auth-Email: ${CLOUDFLARE_AUTH_EMAIL}'
#              -H 'X-Auth-Key: ${CLOUDFLARE_AUTH_KEY}'
#              -d '{"purge_everything": true}'
definitions:
  caches:
    npm: $HOME/.npm
